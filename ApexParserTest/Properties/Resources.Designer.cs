//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApexParserTest.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ApexParserTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class Demo
        ///{
        ///    public Contact contact { get; set; }
        ///
        ///    public Demo() {
        ///        contact = new Contact();
        ///    }
        ///
        ///    public PageReference Save() {
        ///        try {
        ///            insert contact;
        ///        } catch(DMLException e) {
        ///            ApexPages.AddMessages(e);
        ///
        ///        }
        ///        return null;
        ///    }
        ///
        ///
        ///    public static string UpdatePhone(string email, string newPhone)
        ///    {
        ///        List&lt;Contact&gt; contacts = GetContactByEMail(email);
        ///        if(contacts.IsEmpty()) {
        ///            r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApexDemo {
            get {
                return ResourceManager.GetString("ApexDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class Demo
        ///    {
        ///        public Contact contact { get; set; }
        ///
        ///        public Demo()
        ///        {
        ///            contact = new Contact();
        ///        }
        ///
        ///        public PageReference Save()
        ///        {
        ///            try
        ///            {
        ///                Soql.insert(contact);
        ///            }
        ///            catch (DMLException e)
        ///            {
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApexDemo_CSharp {
            get {
                return ResourceManager.GetString("ApexDemo_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class Demo
        ///{
        ///    public Contact contact { get; set; }
        ///
        ///    public Demo()
        ///    {
        ///        contact = new Contact();
        ///    }
        ///
        ///    public PageReference Save()
        ///    {
        ///        try
        ///        {
        ///            insert contact;
        ///        }
        ///        catch (DMLException e)
        ///        {
        ///            ApexPages.AddMessages(e);
        ///        }
        ///
        ///        return null;
        ///    }
        ///
        ///    public static String UpdatePhone(String email, String newPhone)
        ///    {
        ///        List&lt;Contact&gt; contacts = GetContactByEMail(email);
        ///        if  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApexDemo_Formatted {
            get {
                return ResourceManager.GetString("ApexDemo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///public class DemoTest {
        ///
        ///    //:NoApex [OneTimeSetUp]
        ///    //:NoApex public void NoApexSetup()
        ///    //:NoApex {
        ///    //:NoApex     new ApexSharp().Connect(&quot;C:\\DevSharp\\connect.json&quot;);
        ///    //:NoApex }
        ///    //:NoApex 
        ///
        ///    @testSetup
        ///    public static void Setup() {
        ///        Contact contactNew = new Contact();
        ///        contactNew.LastName = &apos;Jay&apos;;
        ///        contactNew.Email = &apos;jay@jay.com&apos;;
        ///        insert contactNew;
        ///    }
        ///
        ///    @IsTest
        ///    public static void UpdatePhoneTestValidEmail() {        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApexDemoTest {
            get {
                return ResourceManager.GetString("ApexDemoTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [TestFixture]
        ///    public class DemoTest
        ///    {
        ///        [OneTimeSetUp]
        ///        public void NoApexSetup()
        ///        {
        ///            new ApexSharp().Connect(&quot;C:\\DevSharp\\connect.json&quot;);
        ///        }
        ///
        ///        [SetUp]
        ///        public static void Setup()
        ///        {
        ///            Contact contactNew = new Contact();
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApexDemoTest_CSharp {
            get {
                return ResourceManager.GetString("ApexDemoTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///public class DemoTest
        ///{
        ///    //:NoApex [OneTimeSetUp]
        ///    //:NoApex public void NoApexSetup()
        ///    //:NoApex {
        ///    //:NoApex     new ApexSharp().Connect(&quot;C:\\DevSharp\\connect.json&quot;);
        ///    //:NoApex }
        ///    //:NoApex 
        ///    @TestSetup
        ///    public static void Setup()
        ///    {
        ///        Contact contactNew = new Contact();
        ///        contactNew.LastName = &apos;Jay&apos;;
        ///        contactNew.Email = &apos;jay@jay.com&apos;;
        ///        insert contactNew;
        ///    }
        ///
        ///    @IsTest
        ///    public static void UpdatePhoneTestValidEmail()        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApexDemoTest_Formatted {
            get {
                return ResourceManager.GetString("ApexDemoTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///private class ApplicationTest 
        ///{
        ///	@IsTest
        ///	private static void callingDomainFactoryShouldGiveRegisteredImplsAndMocks()
        ///	{
        ///		domainObjectAcct = 
        ///			Domain.newInstance(
        ///				new List&lt;SObject&gt; 
        ///					{ new Account( 
        ///						Id = testAccountId,
        ///						Name = &apos;Test Account&apos;) }
        ///				, Account.SObjectType);
        ///
        ///		try {
        ///			Domain.newInstance(new List&lt;Contact&gt;{ new Contact(LastName = &apos;TestContactLName&apos;) });
        ///			System.assert(false, &apos;Expected exception&apos;);
        ///		} catch (System.TypeException e) {
        ///			System [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApplicationTest {
            get {
                return ResourceManager.GetString("ApplicationTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // sample abstract class
        ///public abstract class ClassAbstract
        ///{
        ///}.
        /// </summary>
        internal static string ClassAbstract {
            get {
                return ResourceManager.GetString("ClassAbstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    // sample abstract class
        ///    public abstract class ClassAbstract
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassAbstract_CSharp {
            get {
                return ResourceManager.GetString("ClassAbstract_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // sample abstract class
        ///public abstract class ClassAbstract
        ///{
        ///}
        ///.
        /// </summary>
        internal static string ClassAbstract_Formatted {
            get {
                return ResourceManager.GetString("ClassAbstract_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // sample abstract class
        ///public abstract class ClassAbstract
        ///{
        ///}.
        /// </summary>
        internal static string ClassAbstract_Original {
            get {
                return ResourceManager.GetString("ClassAbstract_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public enum ClassEnum
        ///{
        ///    America,
        ///    Canada,
        ///    Russia
        ///}.
        /// </summary>
        internal static string ClassEnum {
            get {
                return ResourceManager.GetString("ClassEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public enum ClassEnum
        ///    {
        ///        America,
        ///        Canada,
        ///        Russia
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassEnum_CSharp {
            get {
                return ResourceManager.GetString("ClassEnum_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public enum ClassEnum
        ///{
        ///    America,
        ///    Canada,
        ///    Russia
        ///}.
        /// </summary>
        internal static string ClassEnum_Formatted {
            get {
                return ResourceManager.GetString("ClassEnum_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public enum ClassEnum
        ///{
        ///    America,
        ///    Canada,
        ///    Russia
        ///}.
        /// </summary>
        internal static string ClassEnum_Original {
            get {
                return ResourceManager.GetString("ClassEnum_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassException extends Exception
        ///{
        ///}.
        /// </summary>
        internal static string ClassException {
            get {
                return ResourceManager.GetString("ClassException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ClassException : Exception
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassException_CSharp {
            get {
                return ResourceManager.GetString("ClassException_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassException extends Exception
        ///{
        ///}.
        /// </summary>
        internal static string ClassException_Formatted {
            get {
                return ResourceManager.GetString("ClassException_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassException extends Exception
        ///{
        ///}.
        /// </summary>
        internal static string ClassException_Original {
            get {
                return ResourceManager.GetString("ClassException_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global class ClassGlobal
        ///{
        ///}.
        /// </summary>
        internal static string ClassGlobal {
            get {
                return ResourceManager.GetString("ClassGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [Global]
        ///    public class ClassGlobal
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassGlobal_CSharp {
            get {
                return ResourceManager.GetString("ClassGlobal_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global class ClassGlobal
        ///{
        ///}.
        /// </summary>
        internal static string ClassGlobal_Formatted {
            get {
                return ResourceManager.GetString("ClassGlobal_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global class ClassGlobal
        ///{
        ///}.
        /// </summary>
        internal static string ClassGlobal_Original {
            get {
                return ResourceManager.GetString("ClassGlobal_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInitialization {
        ///
        ///    public List&lt;Contact&gt; contactList;
        ///    public ClassInitialization() {
        ///        contactList = [SELECT ID FROM Contact LIMIT 1];
        ///    }
        ///
        ///    public static Map&lt;String, String&gt; colorMap = new Map&lt;String, String&gt;();
        ///
        ///    static {
        ///        colorMap.Put(&apos;red&apos;, &apos;255, 0, 0&apos;);
        ///        colorMap.Put(&apos;cyan&apos;, &apos;0, 255, 255&apos;);
        ///        colorMap.Put(&apos;magenta&apos;, &apos;255, 0, 255&apos;);
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInitialization {
            get {
                return ResourceManager.GetString("ClassInitialization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ClassInitialization
        ///    {
        ///        public List&lt;Contact&gt; contactList;
        ///
        ///        public ClassInitialization()
        ///        {
        ///            contactList = Soql.query&lt;Contact&gt;(@&quot;SELECT ID FROM Contact LIMIT 1&quot;);
        ///        }
        ///
        ///        public static Map&lt;string, string&gt; colorMap = new Map&lt;string, string&gt;();
        ///
        ///        static ClassInitialization()
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassInitialization_CSharp {
            get {
                return ResourceManager.GetString("ClassInitialization_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInitialization
        ///{
        ///    public List&lt;Contact&gt; contactList;
        ///
        ///    public ClassInitialization()
        ///    {
        ///        contactList = [SELECT ID FROM Contact LIMIT 1];
        ///    }
        ///
        ///    public static Map&lt;String, String&gt; colorMap = new Map&lt;String, String&gt;();
        ///
        ///    static
        ///    {
        ///        colorMap.Put(&apos;red&apos;, &apos;255, 0, 0&apos;);
        ///        colorMap.Put(&apos;cyan&apos;, &apos;0, 255, 255&apos;);
        ///        colorMap.Put(&apos;magenta&apos;, &apos;255, 0, 255&apos;);
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassInitialization_Formatted {
            get {
                return ResourceManager.GetString("ClassInitialization_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInitialization {
        ///
        ///    public List&lt;Contact&gt; contactList;
        ///    public ClassInitialization() {
        ///        contactList = [SELECT ID FROM Contact LIMIT 1];
        ///    }
        ///
        ///    public static Map&lt;String, String&gt; colorMap = new Map&lt;String, String&gt;();
        ///
        ///    static {
        ///        colorMap.Put(&apos;red&apos;, &apos;255, 0, 0&apos;);
        ///        colorMap.Put(&apos;cyan&apos;, &apos;0, 255, 255&apos;);
        ///        colorMap.Put(&apos;magenta&apos;, &apos;255, 0, 255&apos;);
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInitialization_Original {
            get {
                return ResourceManager.GetString("ClassInitialization_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInterface implements IClassInterface
        ///{
        ///    public Id GetId() {
        ///        return &apos;&apos;;
        ///    }
        ///    public string GetName()
        ///    {
        ///        return &apos;Jay&apos;;
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInterface {
            get {
                return ResourceManager.GetString("ClassInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ClassInterface : IClassInterface
        ///    {
        ///        public string GetName(string name)
        ///        {
        ///            return name;
        ///        }
        ///
        ///        public string GetName()
        ///        {
        ///            return &quot;Jay&quot;;
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassInterface_CSharp {
            get {
                return ResourceManager.GetString("ClassInterface_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInterface implements IClassInterface
        ///{
        ///    public String GetName(String name)
        ///    {
        ///        return name;
        ///    }
        ///
        ///    public String GetName()
        ///    {
        ///        return &apos;Jay&apos;;
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInterface_Formatted {
            get {
                return ResourceManager.GetString("ClassInterface_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInterface implements IClassInterface
        ///{
        ///    public string GetName(string name)
        ///    {
        ///        return name;
        ///    }
        ///
        ///    public string GetName()
        ///    {
        ///        return &apos;Jay&apos;;
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInterface_Original {
            get {
                return ResourceManager.GetString("ClassInterface_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassInternal
        ///{
        ///    public class InternalClassOne
        ///    {
        ///    }
        ///    public class InternalClassTwo
        ///    {
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInternal {
            get {
                return ResourceManager.GetString("ClassInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ClassInternal
        ///    {
        ///        InternalClassOne classOne = new InternalClassOne();
        ///
        ///        ClassInternal.InternalClassTwo classTwo = new ClassInternal.InternalClassTwo();
        ///
        ///        public class InternalClassOne
        ///        {
        ///        }
        ///
        ///        public class InternalClassTwo
        ///        {
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassInternal_CSharp {
            get {
                return ResourceManager.GetString("ClassInternal_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInternal
        ///{
        ///    InternalClassOne classOne = new InternalClassOne();
        ///
        ///    ClassInternal.InternalClassTwo classTwo = new ClassInternal.InternalClassTwo();
        ///
        ///    public class InternalClassOne
        ///    {
        ///    }
        ///
        ///    public class InternalClassTwo
        ///    {
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInternal_Formatted {
            get {
                return ResourceManager.GetString("ClassInternal_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInternal
        ///{
        ///    InternalClassOne classOne = new InternalClassOne();
        ///    ClassInternal.InternalClassTwo classTwo = new ClassInternal.InternalClassTwo();
        ///
        ///    public class InternalClassOne
        ///    {
        ///    }
        ///
        ///    public class InternalClassTwo
        ///    {
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInternal_Original {
            get {
                return ResourceManager.GetString("ClassInternal_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ClassNoApex
        ///    {
        ///        // Any classes in NoApex name space will be commented out in Apex and uncommented on c#.
        ///        public static void MethodOne()
        ///        {
        ///            NoApex.Serilog.LogInfo(&quot;Jay&quot;);
        ///        }
        ///
        ///        // Any method in NoApex name space will be commented out in Apex and uncommented on c#.
        ///        public stat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassNoApex_CSharp {
            get {
                return ResourceManager.GetString("ClassNoApex_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassNoApex
        ///{
        ///    // Any classes in NoApex name space will be commented out in Apex and uncommented on c#.
        ///    public static void MethodOne()
        ///    {
        ///        //:NoApex NoApex.Serilog.LogInfo(&quot;Jay&quot;);
        ///    }
        ///
        ///    // Any method in NoApex name space will be commented out in Apex and uncommented on c#.
        ///    //:NoApex public static void NoApexMethodTwo()
        ///    //:NoApex {
        ///    //:NoApex     NoApex.Serilog.LogInfo(&quot;Jay&quot;);
        ///    //:NoApex }
        ///}
        ///.
        /// </summary>
        internal static string ClassNoApex_Formatted {
            get {
                return ResourceManager.GetString("ClassNoApex_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassNoApex {
        ///    // Any classes in NoApex name space will be commented out in Apex and uncommented on c#.
        ///    public static void MethodOne()
        ///    {
        ///        //:NoApex NoApex.Serilog.LogInfo(&quot;Jay&quot;);
        ///    }
        ///
        ///
        ///    // Any method in NoApex name space will be commented out in Apex and uncommented on c#.
        ///    //:NoApex public static void NoApexMethodTwo()
        ///    //:NoApex {
        ///    //:NoApex     NoApex.Serilog.LogInfo(&quot;Jay&quot;);
        ///    //:NoApex }
        ///}.
        /// </summary>
        internal static string ClassNoApex_Original {
            get {
                return ResourceManager.GetString("ClassNoApex_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ClassNoApex
        ///    {
        ///        // Any classes in NoApex name space will be commented out in Apex and uncommented on c#.
        ///        public static void MethodOne()
        ///        {
        ///            NoApex.Serilog.LogInfo(&quot;Jay&quot;);
        ///        }
        ///
        ///        public static List&lt;Contact&gt; getContacts()
        ///        {
        ///            List&lt;Contact&gt; contacts = Soql.query&lt;Contac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassNoApex2_CSharp {
            get {
                return ResourceManager.GetString("ClassNoApex2_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassNoApex
        ///{
        ///    // Any classes in NoApex name space will be commented out in Apex and uncommented on c#.
        ///    public static void MethodOne()
        ///    {
        ///        //:NoApex NoApex.Serilog.LogInfo(&quot;Jay&quot;);
        ///    }
        ///
        ///    public static List&lt;Contact&gt; getContacts()
        ///    {
        ///        List&lt;Contact&gt; contacts = [SELECT Id, Email, Phone FROM Contact];
        ///
        ///        //:NoApex NoApex.Serilog.LogInfo(contacts.size().ToString());
        ///        return contacts;
        ///    }
        ///
        ///    public static void callingNonApexCode()
        ///    {        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassNoApex2_Formatted {
            get {
                return ResourceManager.GetString("ClassNoApex2_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassNoApex {
        ///    // Any classes in NoApex name space will be commented out in Apex and uncommented on c#.
        ///    public static void MethodOne()
        ///    {
        ///        //:NoApex NoApex.Serilog.LogInfo(&quot;Jay&quot;);
        ///    }
        ///
        ///    public static List&lt;Contact&gt; getContacts()
        ///    {
        ///        List&lt;Contact&gt; contacts = [SELECT Id, Email, Phone FROM Contact];
        ///        //:NoApex NoApex.Serilog.LogInfo(contacts.size().ToString());
        ///        return contacts;
        ///    }
        ///
        ///    public static void callingNonApexCode()
        ///    {
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassNoApex2_Original {
            get {
                return ResourceManager.GetString("ClassNoApex2_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassOne {
        ///    public void CallClassTwo() {
        ///        ClassTwo classTwo = new ClassTwo();
        ///        System.debug(&apos;Test&apos;);
        ///    }
        ///}.
        /// </summary>
        internal static string ClassOne {
            get {
                return ResourceManager.GetString("ClassOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassOne
        ///{
        ///     public void CallClassTwo()
        ///     {
        ///          ClassTwo classTwo = new ClassTwo();
        ///          System.debug(&apos;Test&apos;);
        ///     }
        ///}
        ///.
        /// </summary>
        internal static string ClassOne_Formatted {
            get {
                return ResourceManager.GetString("ClassOne_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @RestResource(urlMapping=&apos;/api/v1/RestDemo&apos;)
        ///global class ClassRest
        ///{
        ///    @httpDelete
        ///    global static void DoDelete() {
        ///    }
        ///
        ///    @httpPost
        ///    global static void Post() {
        ///    }
        ///
        ///    @httpGet
        ///    global static string Get() {
        ///        return &apos;Jay&apos;;
        ///    }
        ///
        ///    @httpPatch
        ///    global static void Patch() {
        ///    }
        ///
        ///    @httpPut
        ///    global static void Put() {
        ///    }
        ///}.
        /// </summary>
        internal static string ClassRest {
            get {
                return ResourceManager.GetString("ClassRest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [RestResource(urlMapping=&quot;/api/RestDemo&quot;)]
        ///    [Global]
        ///    public class ClassRest
        ///    {
        ///        public class ContactDTO
        ///        {
        ///            public string LastName { get; set; }
        ///        }
        ///
        ///        [HttpPost]
        ///        [Global]
        ///        public static void Post()
        ///        {
        ///            try
        ///            {
        ///                ContactDTO contact = (C [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassRest_CSharp {
            get {
                return ResourceManager.GetString("ClassRest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @RestResource(urlMapping=&apos;/api/RestDemo&apos;)
        ///global class ClassRest
        ///{
        ///    public class ContactDTO
        ///    {
        ///        public String LastName { get; set; }
        ///    }
        ///
        ///    @HttpPost
        ///    global static void Post()
        ///    {
        ///        try
        ///        {
        ///            ContactDTO contact = (ContactDTO)JSON.Deserialize(RestContext.Request.RequestBody.ToString(), ContactDTO.class);
        ///            InsertContact(contact);
        ///            RestContext.Response.StatusCode = 200;
        ///        }
        ///        catch (Exception e)
        ///        {
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassRest_Formatted {
            get {
                return ResourceManager.GetString("ClassRest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @RestResource(urlMapping=&apos;/api/RestDemo&apos;)
        ///global class ClassRest
        ///{
        ///    public class ContactDTO {
        ///        public String LastName {get;set;}
        ///    }
        ///
        ///    @httpPost
        ///    global static void Post() {
        ///
        ///        try {
        ///            ContactDTO contact = (ContactDTO) JSON.Deserialize(RestContext.Request.RequestBody.ToString(), ContactDTO.class);
        ///            InsertContact(contact);
        ///            RestContext.Response.StatusCode = 200;
        ///        } catch (Exception e) {
        ///            RestContext.Response.StatusCode = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassRest_Original {
            get {
                return ResourceManager.GetString("ClassRest_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [TestFixture]
        ///    public class ClassRestTest
        ///    {
        ///        [Test]
        ///        public static void PostTest()
        ///        {
        ///            RestContext.Request = new RestRequest();
        ///            RestContext.Response = new RestResponse();
        ///            ClassRest.ContactDTO contact = new ClassRest.ContactDTO();
        ///            contact. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassRestTest_CSharp {
            get {
                return ResourceManager.GetString("ClassRestTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///public class ClassRestTest
        ///{
        ///    @IsTest
        ///    public static void PostTest()
        ///    {
        ///        RestContext.Request = new RestRequest();
        ///        RestContext.Response = new RestResponse();
        ///        ClassRest.ContactDTO contact = new ClassRest.ContactDTO();
        ///        contact.LastName = &apos;LastName&apos;;
        ///        RestContext.Request.RequestBody = Blob.ValueOf(JSON.Serialize(contact));
        ///        ClassRest.Post();
        ///        System.AssertEquals(200, RestContext.Response.StatusCode);
        ///        List&lt;Contact&gt; contacts [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassRestTest_Formatted {
            get {
                return ResourceManager.GetString("ClassRestTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest
        ///public class ClassRestTest {
        ///    @isTest
        ///    public static void PostTest() {
        ///
        ///        RestContext.Request = new RestRequest();
        ///        RestContext.Response = new RestResponse();
        ///
        ///        ClassRest.ContactDTO contact = new ClassRest.ContactDTO();
        ///        contact.LastName = &apos;LastName&apos;;
        ///
        ///        RestContext.Request.RequestBody = Blob.ValueOf(JSON.Serialize(contact));
        ///        ClassRest.Post();
        ///
        ///        System.AssertEquals(200, RestContext.Response.StatusCode);
        ///
        ///        List&lt;Contact&gt; cont [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassRestTest_Original {
            get {
                return ResourceManager.GetString("ClassRestTest_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassTwo {
        ///    public ClassTwo() {
        ///        System.debug(&apos;Test&apos;);
        ///    }
        ///
        ///    public ClassTwo(String vin) {
        ///    }
        ///}.
        /// </summary>
        internal static string ClassTwo {
            get {
                return ResourceManager.GetString("ClassTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassTwo
        ///{
        ///     public ClassTwo()
        ///     {
        ///          System.debug(&apos;Test&apos;);
        ///     }
        ///
        ///     public ClassTwo(String vin)
        ///     {
        ///     }
        ///}
        ///.
        /// </summary>
        internal static string ClassTwo_Formatted {
            get {
                return ResourceManager.GetString("ClassTwo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest
        ///public class ClassUnitTest
        ///{
        ///    @TestSetup
        ///    public static void Setup()
        ///    {
        ///        System.Debug(&apos;One Time Setup Got Called&apos;);
        ///    }
        ///    @isTest
        ///    public static void AssertTrue()
        ///    {
        ///        System.Assert(true, &apos;Assert True&apos;);
        ///    }
        ///    @isTest
        ///    public static void AssertEquals()
        ///    {
        ///        System.AssertEquals(5, 5, &apos;Assert Equal&apos;);
        ///    }
        ///    @isTest
        ///    public static void AssertNotEquals()
        ///    {
        ///        System.AssertNotEquals(5, 0, &apos;Assert Not Equal&apos;);
        ///    }
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassUnitTest {
            get {
                return ResourceManager.GetString("ClassUnitTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///public class ClassUnitTest
        ///{
        ///    @TestSetup
        ///    public static void Setup()
        ///    {
        ///        System.Debug(&apos;One Time Setup Got Called&apos;);
        ///    }
        ///
        ///    @IsTest
        ///    public static void Assert()
        ///    {
        ///        System.Assert(true, &apos;Assert True&apos;);
        ///    }
        ///
        ///    @IsTest
        ///    public static void AssertTestMethod()
        ///    {
        ///        System.Assert(true, &apos;Assert True&apos;);
        ///    }
        ///
        ///    @IsTest
        ///    public static void AssertEquals()
        ///    {
        ///        System.AssertEquals(5, 5, &apos;Assert Equal&apos;);
        ///    }
        ///
        ///    @IsTest        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassUnitTest_Converted {
            get {
                return ResourceManager.GetString("ClassUnitTest_Converted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [TestFixture]
        ///    public class ClassUnitTest
        ///    {
        ///        [SetUp]
        ///        public static void Setup()
        ///        {
        ///            System.Debug(&quot;One Time Setup Got Called&quot;);
        ///        }
        ///
        ///        [Test]
        ///        public static void AssertTrue()
        ///        {
        ///            System.Assert(true, &quot;Assert True&quot;);
        ///        }
        ///
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassUnitTest_CSharp {
            get {
                return ResourceManager.GetString("ClassUnitTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [TestFixture]
        ///    public class ClassUnitTest
        ///    {
        ///        [SetUp]
        ///        public static void Setup()
        ///        {
        ///            System.Debug(&quot;One Time Setup Got Called&quot;);
        ///        }
        ///
        ///        [Test]
        ///        public static void Assert()
        ///        {
        ///            System.Assert(true, &quot;Assert True&quot;);
        ///        }
        ///
        ///        [ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassUnitTest_CSharp1 {
            get {
                return ResourceManager.GetString("ClassUnitTest_CSharp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///public class ClassUnitTest
        ///{
        ///    @TestSetup
        ///    public static void Setup()
        ///    {
        ///        System.Debug(&apos;One Time Setup Got Called&apos;);
        ///    }
        ///
        ///    @IsTest
        ///    public static void Assert()
        ///    {
        ///        System.Assert(true, &apos;Assert True&apos;);
        ///    }
        ///
        ///    public static testMethod void AssertTestMethod()
        ///    {
        ///        System.Assert(true, &apos;Assert True&apos;);
        ///    }
        ///
        ///    @IsTest
        ///    public static void AssertEquals()
        ///    {
        ///        System.AssertEquals(5, 5, &apos;Assert Equal&apos;);
        ///    }
        ///
        ///    public sta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassUnitTest_Formatted {
            get {
                return ResourceManager.GetString("ClassUnitTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest
        ///public class ClassUnitTest {
        ///    @TestSetup
        ///    public static void Setup() {
        ///        System.Debug(&apos;One Time Setup Got Called&apos;);
        ///    }
        ///
        ///    @isTest
        ///    public static void Assert() {
        ///        System.Assert(true, &apos;Assert True&apos;);
        ///    }
        ///    public static testMethod void AssertTestMethod() {
        ///        System.Assert(true, &apos;Assert True&apos;);
        ///    }
        ///
        ///    @isTest
        ///    public static void AssertEquals() {
        ///        System.AssertEquals(5, 5, &apos;Assert Equal&apos;);
        ///    }
        ///    public static testMethod void Asser [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassUnitTest_Original {
            get {
                return ResourceManager.GetString("ClassUnitTest_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest
        ///public class ClassUnitTestRunAs
        ///{
        ///    static testMethod void RunAsExample()
        ///    {
        ///        User newUser = new User();
        ///        System.RunAs(newUser)
        ///        {
        ///
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string ClassUnitTestRunAs {
            get {
                return ResourceManager.GetString("ClassUnitTestRunAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ClassUnitTestRunAs
        ///    {
        ///        static void RunAsExample()
        ///        {
        ///            User newUser = Soql.query&lt;User&gt;(@&quot;SELECT Id FROM User LIMIT 1&quot;);
        ///            using (System.runAs(newUser))
        ///            {
        ///            }
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassUnitTestRunAs_CSharp {
            get {
                return ResourceManager.GetString("ClassUnitTestRunAs_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassUnitTestRunAs
        ///{
        ///    static void RunAsExample()
        ///    {
        ///        User newUser = [SELECT Id FROM User LIMIT 1];
        ///        System.runAs(newUser)
        ///        {
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassUnitTestRunAs_Formatted {
            get {
                return ResourceManager.GetString("ClassUnitTestRunAs_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassUnitTestRunAs
        ///{
        ///    static void RunAsExample()
        ///    {
        ///        User newUser = [SELECT Id FROM User LIMIT 1];
        ///        System.RunAs(newUser)
        ///        {
        ///
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string ClassUnitTestRunAs_Original {
            get {
                return ResourceManager.GetString("ClassUnitTestRunAs_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest(SeeAllData=true)
        ///public class ClassUnitTestSeeAllData
        ///{
        ///}.
        /// </summary>
        internal static string ClassUnitTestSeeAllData {
            get {
                return ResourceManager.GetString("ClassUnitTestSeeAllData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [TestFixture(SeeAllData=true)]
        ///    public class ClassUnitTestSeeAllData
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassUnitTestSeeAllData_CSharp {
            get {
                return ResourceManager.GetString("ClassUnitTestSeeAllData_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest(SeeAllData=true)
        ///public class ClassUnitTestSeeAllData
        ///{
        ///}.
        /// </summary>
        internal static string ClassUnitTestSeeAllData_Formatted {
            get {
                return ResourceManager.GetString("ClassUnitTestSeeAllData_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest(SeeAllData=true)
        ///public class ClassUnitTestSeeAllData
        ///{
        ///}.
        /// </summary>
        internal static string ClassUnitTestSeeAllData_Original {
            get {
                return ResourceManager.GetString("ClassUnitTestSeeAllData_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public virtual class ClassVirtual
        ///{
        ///}.
        /// </summary>
        internal static string ClassVirtual {
            get {
                return ResourceManager.GetString("ClassVirtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassTwo {
        ///    public ClassTwo() { // constructor
        ///        System.debug(&apos;Test&apos;);
        ///    }
        ///
        ///    public ClassTwo(String vin) { // another constructor
        ///    // with a lot of misplaced comments
        ///    }
        ///
        ///    /*
        ///     * This  is a comment line one
        ///     * This is a comment // line two
        ///     */
        ///    public void Hello() { System.debug(&apos;Hello&apos;); }
        ///}.
        /// </summary>
        internal static string ClassWithComments {
            get {
                return ResourceManager.GetString("ClassWithComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassTwo
        ///{
        ///     public ClassTwo()
        ///     {
        ///          // constructor
        ///          System.debug(&apos;Test&apos;);
        ///     }
        ///
        ///     public ClassTwo(String vin)
        ///     {
        ///          // another constructor
        ///          // with a lot of misplaced comments
        ///     }
        ///
        ///     /*
        ///      * This  is a comment line one
        ///      * This is a comment // line two
        ///      */
        ///     public void Hello()
        ///     {
        ///          System.debug(&apos;Hello&apos;);
        ///     }
        ///}
        ///.
        /// </summary>
        internal static string ClassWithComments_Formatted {
            get {
                return ResourceManager.GetString("ClassWithComments_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public without sharing class ClassWithOutSharing
        ///{
        ///}.
        /// </summary>
        internal static string ClassWithOutSharing {
            get {
                return ResourceManager.GetString("ClassWithOutSharing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [WithoutSharing]
        ///    public class ClassWithOutSharing
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassWithOutSharing_CSharp {
            get {
                return ResourceManager.GetString("ClassWithOutSharing_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public without sharing class ClassWithOutSharing
        ///{
        ///}.
        /// </summary>
        internal static string ClassWithOutSharing_Formatted {
            get {
                return ResourceManager.GetString("ClassWithOutSharing_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public without sharing class ClassWithOutSharing
        ///{
        ///}.
        /// </summary>
        internal static string ClassWithOutSharing_Original {
            get {
                return ResourceManager.GetString("ClassWithOutSharing_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassWithSharing
        ///{
        ///}.
        /// </summary>
        internal static string ClassWithSharing {
            get {
                return ResourceManager.GetString("ClassWithSharing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [WithSharing]
        ///    public class ClassWithSharing
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ClassWithSharing_CSharp {
            get {
                return ResourceManager.GetString("ClassWithSharing_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassWithSharing
        ///{
        ///}.
        /// </summary>
        internal static string ClassWithSharing_Formatted {
            get {
                return ResourceManager.GetString("ClassWithSharing_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassWithSharing
        ///{
        ///}.
        /// </summary>
        internal static string ClassWithSharing_Original {
            get {
                return ResourceManager.GetString("ClassWithSharing_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [WithSharing]
        ///    public class Collections
        ///    {
        ///        public List&lt;string&gt; StringList = new List&lt;string&gt;{&quot;one&quot;, &quot;two&quot;};
        ///
        ///        public int[] IntegerArray = new int[]{1, 2, 3};
        ///
        ///        public void ArrayDemo()
        ///        {
        ///            List&lt;string&gt; stringListLocal = new List&lt;string&gt;{&quot;one&quot;, &quot;two&quot;};
        ///            int[] integerArrayLocal = new int[]{ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Collections_CSharp {
            get {
                return ResourceManager.GetString("Collections_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class Collections
        ///{
        ///    public List&lt;String&gt; StringList = new List&lt;String&gt;{&apos;one&apos;, &apos;two&apos;};
        ///
        ///    public Integer[] IntegerArray = new Integer[]{1, 2, 3};
        ///
        ///    public void ArrayDemo()
        ///    {
        ///        List&lt;String&gt; stringListLocal = new List&lt;String&gt;{&apos;one&apos;, &apos;two&apos;};
        ///        Integer[] integerArrayLocal = new Integer[]{1, 2, 3};
        ///    }
        ///
        ///    public void ListExample()
        ///    {
        ///        List&lt;Integer&gt; myList = new List&lt;Integer&gt;();
        ///        myList.Add(47);
        ///        Integer i = myList.Get(0);
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Collections_Formatted {
            get {
                return ResourceManager.GetString("Collections_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class Collections {
        ///
        ///    public List&lt;String&gt; StringList = new List&lt;String&gt; { &apos;one&apos;, &apos;two&apos; };
        ///    public Integer[] IntegerArray = new Integer[]{1, 2, 3};
        ///
        ///    public void ArrayDemo() {
        ///        List&lt;String&gt; stringListLocal = new List&lt;String&gt; { &apos;one&apos;, &apos;two&apos; };
        ///        Integer[] integerArrayLocal = new Integer[]{1, 2, 3};
        ///    }
        ///
        ///
        ///    public void ListExample()
        ///    {
        ///        List&lt;Integer&gt; myList = new List&lt;Integer&gt;();
        ///        myList.Add(47);
        ///
        ///        Integer i = myList.Get(0);        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Collections_Original {
            get {
                return ResourceManager.GetString("Collections_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class CommentFail
        ///{
        ////*
        ///* ************************************************************************************************
        ///* This is a general method for retrieving an sObject by it&apos;s id. selectFields is a list of fields
        ///* to return on the sObject.
        ///* ************************************************************************************************
        ///*/
        ///}.
        /// </summary>
        internal static string CommentFail {
            get {
                return ResourceManager.GetString("CommentFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * This comment belongs to the Class Syntax
        /// */
        ///public with sharing class Comments 
        ///// This comment belongs to the open bracket syntax
        ///{
        ///
        ///    // This comment belongs to the Method Syntax
        ///    public static void DemoMethod() {
        ///        Integer demoValue = 5; // Side Line Comment
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string Comments {
            get {
                return ResourceManager.GetString("Comments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /**
        ///     * This comment belongs to the Class Syntax
        ///     */
        ///    [WithSharing]
        ///    public class Comments
        ///    {
        ///        // This comment belongs to the Method Syntax
        ///        public static void DemoMethod()
        ///        {
        ///            int demoValue = 5; // Side Line Comment
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string Comments_CSharp {
            get {
                return ResourceManager.GetString("Comments_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * This comment belongs to the Class Syntax
        /// */
        ///public with sharing class Comments
        ///{
        ///    // This comment belongs to the Method Syntax
        ///    public static void DemoMethod()
        ///    {
        ///        Integer demoValue = 5; // Side Line Comment
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string Comments_Formatted {
            get {
                return ResourceManager.GetString("Comments_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * This comment belongs to the Class Syntax
        /// */
        ///public with sharing class Comments
        ////**
        ///  * This comment belongs to the Class Syntax
        ///  */
        ///// This comment belongs to the open bracket syntax
        ///{
        ///
        ///    // This comment belongs to the Method Syntax
        ///    public static void DemoMethod() {
        ///        Integer demoValue = 5; // Side Line Comment
        ///    }
        ///}.
        /// </summary>
        internal static string Comments_Original {
            get {
                return ResourceManager.GetString("Comments_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class CustomerDto
        ///{
        ///    public String make {get;set;}
        ///    public String year {get;set;}
        ///    public CustomerDto.User user {get;set;}
        ///
        ///    public class User {
        ///        public string userName {get;set;}
        ///    }
        ///}.
        /// </summary>
        internal static string CustomerDto {
            get {
                return ResourceManager.GetString("CustomerDto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class CustomerDto
        ///{
        ///     public String make { get; set; }
        ///
        ///     public String year { get; set; }
        ///
        ///     public CustomerDto.User user { get; set; }
        ///
        ///     public class User
        ///     {
        ///          public String userName { get; set; }
        ///     }
        ///}
        ///.
        /// </summary>
        internal static string CustomerDto_Formatted {
            get {
                return ResourceManager.GetString("CustomerDto_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class DataAccessDemo
        ///{
        ///    private DataAccessLayerI dl;
        ///
        ///    public DataAccessDemo()
        ///    {
        ///        if (Test.isRunningTest())
        ///        {
        ///            dl = (DataAccessLayerMok) MokProvider.createMokProvidor(DataAccessLayerMok.class);
        ///        }
        ///        else
        ///        {
        ///            dl = new DataAccessLayer();
        ///        }
        ///    }
        ///
        ///    public String UpdateContactEmailAddress(string firstName, string lastName, string email)
        ///    {
        ///        Contact contact = dl.GetContactByName(firstName, lastName);
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataAccessDemo {
            get {
                return ResourceManager.GetString("DataAccessDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class Demo
        ///{
        ///    public static void RunContactDemo()
        ///    {
        ///        Contact contactNew = new Contact(LastName = &apos;Jay1&apos;, EMail = &apos;abc@abc.com&apos;);
        ///        insert contactNew;
        ///        System.debug(contactNew.Id);
        ///
        ///        List&lt;Contact&gt; contacts = [SELECT Id, Email FROM Contact WHERE Id = :contactNew.Id];
        ///        for (Contact c : contacts)
        ///        {
        ///            System.debug(c.Email); c.Email = &apos;new@new.com&apos;;
        ///        }
        ///        update contacts;
        ///        contacts = [SELECT Id, Email FROM Contact W [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Demo {
            get {
                return ResourceManager.GetString("Demo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class Demo
        ///    {
        ///        public Contact contact { get; set; }
        ///
        ///        public Demo()
        ///        {
        ///            contact = new Contact();
        ///        }
        ///
        ///        public PageReference Save()
        ///        {
        ///            try
        ///            {
        ///                Soql.insert(contact);
        ///            }
        ///            catch (DmlException e)
        ///            {
        ///            [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Demo_CSharp {
            get {
                return ResourceManager.GetString("Demo_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class Demo
        ///{
        ///    public Contact contact { get; set; }
        ///
        ///    public Demo()
        ///    {
        ///        contact = new Contact();
        ///    }
        ///
        ///    public PageReference Save()
        ///    {
        ///        try
        ///        {
        ///            insert contact;
        ///        }
        ///        catch (DmlException e)
        ///        {
        ///            ApexPages.AddMessages(e);
        ///        }
        ///
        ///        return null;
        ///    }
        ///
        ///    public static String UpdatePhone(String email, String newPhone)
        ///    {
        ///        List&lt;Contact&gt; contacts = GetContactByEMail(email);
        ///        if  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Demo_Formatted {
            get {
                return ResourceManager.GetString("Demo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class Demo
        ///{
        ///    public Contact contact { get; set; }
        ///
        ///    public Demo()
        ///    {
        ///        contact = new Contact();
        ///    }
        ///
        ///    public PageReference Save()
        ///    {
        ///        try
        ///        {
        ///            insert contact;
        ///        }
        ///        catch (DmlException e)
        ///        {
        ///            ApexPages.AddMessages(e);
        ///        }
        ///
        ///        return null;
        ///    }
        ///
        ///    public static string UpdatePhone(string email, string newPhone)
        ///    {
        ///        List&lt;Contact&gt; contacts = GetContactByEMail(email);
        ///        if  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Demo_Original {
            get {
                return ResourceManager.GetString("Demo_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class Demo2
        ///{
        ///    public void MethodOne(int x)
        ///    {
        ///        if (x == 5)
        ///        {
        ///            Console.WriteLine(1);
        ///
        ///            if (x == 8)
        ///            {
        ///                Console.WriteLine(8);
        ///            }
        ///
        ///            Console.WriteLine(2);
        ///            Console.WriteLine(3);
        ///        } else if (x == 6)
        ///        {
        ///            Console.WriteLine(6);
        ///        }
        ///        else
        ///        {
        ///            Console.WriteLine(7);
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string Demo2 {
            get {
                return ResourceManager.GetString("Demo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [WithSharing]
        ///    public class DemoController
        ///    {
        ///        /**
        ///         * An empty constructor for the testing
        ///         */
        ///        public DemoController()
        ///        {
        ///        }
        ///
        ///        /**
        ///         * Set the contact for the page using the lastName parameter, if there is one
        ///         */
        ///        //  public DemoController(ApexPages.StandardCon [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoController_CSharp {
            get {
                return ResourceManager.GetString("DemoController_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class DemoController
        ///{
        ///    /**
        ///     * An empty constructor for the testing
        ///     */
        ///    public DemoController()
        ///    {
        ///    }
        ///
        ///    /**
        ///     * Set the contact for the page using the lastName parameter, if there is one
        ///     */
        ///    //  public DemoController(ApexPages.StandardController controller) {
        ///    // Get the last name from the url
        ///    //        String lastName = ApexPages.currentPage().getParameters().get(&apos;lastName&apos;);
        ///    //        if (lastName != null) {
        ///    // Query the [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoController_Formatted {
            get {
                return ResourceManager.GetString("DemoController_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class DemoController {
        ///    /**
        ///     * An empty constructor for the testing
        ///     */
        ///    public DemoController() {}
        ///
        ///    /**
        ///     * Set the contact for the page using the lastName parameter, if there is one
        ///     */
        ///  //  public DemoController(ApexPages.StandardController controller) {
        ///        // Get the last name from the url
        /////        String lastName = ApexPages.currentPage().getParameters().get(&apos;lastName&apos;);
        ///
        /////        if (lastName != null) {
        ///            // Query the object        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoController_Original {
            get {
                return ResourceManager.GetString("DemoController_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [TestFixture]
        ///    public class DemoControllerTests
        ///    {
        ///        [Test]
        ///        static void testConstructor()
        ///        {
        ///            //  	Contact contact = new Contact(LastName=&apos;Smith&apos;);
        ///            //  	insert contact;
        ///            //  	Test.setCurrentPage(Page.DemoPage);
        ///            //	ApexPages.currentPage().ge [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoControllerTests_CSharp {
            get {
                return ResourceManager.GetString("DemoControllerTests_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///@isTest
        ///public class DemoControllerTests {
        ///    @isTest static void testConstructor() {
        ///  //  	Contact contact = new Contact(LastName=&apos;Smith&apos;);
        ///  //  	insert contact;
        ///
        ///  //  	Test.setCurrentPage(Page.DemoPage);
        ///    //	ApexPages.currentPage().getParameters().put(&apos;lastName&apos;, &apos;Smith&apos;);
        ///
        ///  //  	DemoController demo = new DemoController(new ApexPages.StandardController(contact));
        ///    //	System.assertEquals(contact.Id, ApexPages.currentPage().getParameters().get(&apos;id&apos;));
        ///    }
        ///
        ///    @isTest static void [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoControllerTests_Formatted {
            get {
                return ResourceManager.GetString("DemoControllerTests_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///@isTest
        ///public class DemoControllerTests {
        ///    @isTest static void testConstructor() {
        ///  //  	Contact contact = new Contact(LastName=&apos;Smith&apos;);
        ///  //  	insert contact;
        ///
        ///  //  	Test.setCurrentPage(Page.DemoPage);
        ///    //	ApexPages.currentPage().getParameters().put(&apos;lastName&apos;, &apos;Smith&apos;);
        ///
        ///  //  	DemoController demo = new DemoController(new ApexPages.StandardController(contact));
        ///    //	System.assertEquals(contact.Id, ApexPages.currentPage().getParameters().get(&apos;id&apos;));
        ///    }
        ///
        ///    @isTest static void [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoControllerTests_Original {
            get {
                return ResourceManager.GetString("DemoControllerTests_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [TestFixture]
        ///    public class DemoTest
        ///    {
        ///        [SetUp]
        ///        public static void Setup()
        ///        {
        ///            Contact contactNew = new Contact();
        ///            contactNew.LastName = &quot;Jay&quot;;
        ///            contactNew.Email = &quot;jay@jay.com&quot;;
        ///            Soql.insert(contactNew);
        ///        }
        ///
        ///        [Test]
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoTest_CSharp {
            get {
                return ResourceManager.GetString("DemoTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///public class DemoTest
        ///{
        ///    @TestSetup
        ///    public static void Setup()
        ///    {
        ///        Contact contactNew = new Contact();
        ///        contactNew.LastName = &apos;Jay&apos;;
        ///        contactNew.Email = &apos;jay@jay.com&apos;;
        ///        insert contactNew;
        ///    }
        ///
        ///    @IsTest
        ///    public static void UpdatePhoneTestValidEmail()
        ///    {
        ///        Demo.UpdatePhone(&apos;jay@jay.com&apos;, &apos;555-1212&apos;);
        ///        List&lt;Contact&gt; contacts = [SELECT ID, Email, Phone FROM Contact WHERE Email = &apos;jay@jay.com&apos;];
        ///        System.AssertEquals(con [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoTest_Formatted {
            get {
                return ResourceManager.GetString("DemoTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///public class DemoTest
        ///{
        ///    @TestSetup
        ///    public static void Setup()
        ///    {
        ///        Contact contactNew = new Contact();
        ///        contactNew.LastName = &apos;Jay&apos;;
        ///        contactNew.Email = &apos;jay@jay.com&apos;;
        ///        insert contactNew;
        ///    }
        ///    @IsTest
        ///    public static void UpdatePhoneTestValidEmail()
        ///    {
        ///        Demo.UpdatePhone(&apos;jay@jay.com&apos;, &apos;555-1212&apos;);
        ///        List&lt;Contact&gt; contacts = [SELECT ID, Email, Phone FROM Contact WHERE Email = &apos;jay@jay.com&apos;];
        ///        System.AssertEquals(conta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DemoTest_Original {
            get {
                return ResourceManager.GetString("DemoTest_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ExceptionDemo
        ///{
        ///    public static void CatchDemo()
        ///    {
        ///        try
        ///        {
        ///            ThrowDemo();
        ///        }
        ///        catch (MathException e)
        ///        {
        ///            System.debug(e.getMessage());
        ///        }
        ///        finally
        ///        {
        ///            System.debug(&apos;Finally&apos;);
        ///        }
        ///    }
        ///
        ///    public static void ThrowDemo()
        ///    {
        ///        throw new MathException(&apos;something bad happened!&apos;);
        ///    }
        ///}.
        /// </summary>
        internal static string ExceptionDemo {
            get {
                return ResourceManager.GetString("ExceptionDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ExceptionDemo
        ///    {
        ///        public static void CatchDemo()
        ///        {
        ///            try
        ///            {
        ///                ThrowDemo();
        ///            }
        ///            catch (MathException e)
        ///            {
        ///                System.Debug(e.GetMessage());
        ///            }
        ///            finally
        ///            {
        ///                System.Debug(&quot;Finally&quot;);
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExceptionDemo_CSharp {
            get {
                return ResourceManager.GetString("ExceptionDemo_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ExceptionDemo
        ///{
        ///    public static void CatchDemo()
        ///    {
        ///        try
        ///        {
        ///            ThrowDemo();
        ///        }
        ///        catch (MathException e)
        ///        {
        ///            System.Debug(e.GetMessage());
        ///        }
        ///        finally
        ///        {
        ///            System.Debug(&apos;Finally&apos;);
        ///        }
        ///    }
        ///
        ///    public static void ThrowDemo()
        ///    {
        ///        throw new MathException(&apos;something bad happened!&apos;);
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ExceptionDemo_Formatted {
            get {
                return ResourceManager.GetString("ExceptionDemo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ExceptionDemo
        ///{
        ///    public static void CatchDemo()
        ///    {
        ///        try
        ///        {
        ///            ThrowDemo();
        ///        }
        ///        catch (MathException e)
        ///        {
        ///            System.Debug(e.GetMessage());
        ///        }
        ///        finally
        ///        {
        ///            System.Debug(&apos;Finally&apos;);
        ///        }
        ///    }
        ///
        ///    public static void ThrowDemo()
        ///    {
        ///        throw new MathException(&apos;something bad happened!&apos;);
        ///    }
        ///}.
        /// </summary>
        internal static string ExceptionDemo_Original {
            get {
                return ResourceManager.GetString("ExceptionDemo_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// *	Interface for the answering framework.
        /// *	This interface must be implemented inside the test class and implement the call back method answer.
        /// *	@group Core
        /// */
        ///public interface fflib_Answer
        ///{
        ///	/**
        ///	 *	Method to be implemented in the test class to implement the call back method.
        ///	 *	@param invocation The invocation on the mock.
        ///	 *	@throws The exception to be thrown.
        ///	 *	@return The value to be returned.
        ///	 */
        ///	Object answer(ff [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_Answer {
            get {
                return ResourceManager.GetString("fflib_Answer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     *	Interface for the answering framework.
        ///     *	This interface must be implemented inside the test class and implement the call back method answer.
        ///     *	@group Core
        ///     */
        ///    public interface fflib_Answer
        ///    {
        ///        /**
        ///         *	Method to b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_Answer_CSharp {
            get {
                return ResourceManager.GetString("fflib_Answer_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// *	Interface for the answering framework.
        /// *	This interface must be implemented inside the test class and implement the call back method answer.
        /// *	@group Core
        /// */
        ///public interface fflib_Answer
        ///{
        ///    /**
        ///     *	Method to be implemented in the test class to implement the call back method.
        ///     *	@param invocation The invocation on the mock.
        ///     *	@throws The exception to be thrown.
        ///     *	@return The value to be retu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_Answer_Formatted {
            get {
                return ResourceManager.GetString("fflib_Answer_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// * @nodoc
        /// */
        ///@isTest
        ///private class fflib_AnswerTest
        ///{
        ///
        ///	private static fflib_InvocationOnMock actualInvocation = null;
        ///
        ///	@isTest
        ///	static void thatAnswersWithException()
        ///	{
        ///		// Given
        ///		fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///		fflib_MyList mockList = (fflib_MyList)mocks.mock(fflib_MyList.class);
        ///
        ///		mocks.startStubbing();
        ///		mocks.when(mockList.get2(0, &apos;Hi hi Hello Hi hi&apos;)).thenAnswer(new fflib_AnswerTest.ExceptionForAnswer [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnswerTest {
            get {
                return ResourceManager.GetString("fflib_AnswerTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     * @nodoc
        ///     */
        ///    [TestFixture]
        ///    private class fflib_AnswerTest
        ///    {
        ///        private static fflib_InvocationOnMock actualInvocation = null;
        ///
        ///        [Test]
        ///        static void thatAnswersWithException()
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnswerTest_CSharp {
            get {
                return ResourceManager.GetString("fflib_AnswerTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// * @nodoc
        /// */
        ///@IsTest
        ///private class fflib_AnswerTest
        ///{
        ///    private static fflib_InvocationOnMock actualInvocation = null;
        ///
        ///    @IsTest
        ///    static void thatAnswersWithException()
        ///    {
        ///        // Given
        ///        fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///        fflib_MyList mockList = (fflib_MyList)mocks.mock(fflib_MyList.class);
        ///        mocks.startStubbing();
        ///        mocks.when(mockList.get2(0, &apos;Hi hi Hello Hi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnswerTest_Formatted {
            get {
                return ResourceManager.GetString("fflib_AnswerTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// *	&apos;Classic&apos; invocation verifier - checks that a method was called with the given arguments the expected number of times.
        /// *	The order of method calls is not important.
        /// *	@group Core
        /// */
        ///public class fflib_AnyOrder extends fflib_MethodVerifier
        ///{
        ///	/*
        ///	 * Verifies a method was invoked the expected number of times, with the expected arguments.
        ///	 * @param qualifiedMethod The method to be verified.
        ///	 * @param methodArg The arguments  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrder {
            get {
                return ResourceManager.GetString("fflib_AnyOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     *	&apos;Classic&apos; invocation verifier - checks that a method was called with the given arguments the expected number of times.
        ///     *	The order of method calls is not important.
        ///     *	@group Core
        ///     */
        ///    public class fflib_AnyOrder : fflib_MethodVerifie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrder_CSharp {
            get {
                return ResourceManager.GetString("fflib_AnyOrder_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// *	&apos;Classic&apos; invocation verifier - checks that a method was called with the given arguments the expected number of times.
        /// *	The order of method calls is not important.
        /// *	@group Core
        /// */
        ///public class fflib_AnyOrder extends fflib_MethodVerifier
        ///{
        ///    /*
        ///     * Verifies a method was invoked the expected number of times, with the expected arguments.
        ///     * @param qualifiedMethod The method to be verified.
        ///     * @param  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrder_Formatted {
            get {
                return ResourceManager.GetString("fflib_AnyOrder_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// * @nodoc
        /// */
        ///@isTest
        ///private class fflib_AnyOrderTest
        ///{
        ///	private static final String BASIC_VERIFY_ASSERTION_MESSAGE = &apos;Expected : {0}, Actual: {1} -- Wanted but not invoked: &apos;;
        ///
        ///	/*
        ///	 *	replicating the apex mocks tests with the new syntax
        ///	 */
        ///
        ///	@isTest
        ///	private static void whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts()
        ///	{
        ///		// Given
        ///		fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///		fflib_MyList mockLi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrderTest {
            get {
                return ResourceManager.GetString("fflib_AnyOrderTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     * @nodoc
        ///     */
        ///    [TestFixture]
        ///    private class fflib_AnyOrderTest
        ///    {
        ///        private static readonly string BASIC_VERIFY_ASSERTION_MESSAGE = &quot;Expected : {0}, Actual: {1} -- Wanted but not invoked: &quot;;
        ///
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrderTest_CSharp {
            get {
                return ResourceManager.GetString("fflib_AnyOrderTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// * @nodoc
        /// */
        ///@IsTest
        ///private class fflib_AnyOrderTest
        ///{
        ///    private static final String BASIC_VERIFY_ASSERTION_MESSAGE = &apos;Expected : {0}, Actual: {1} -- Wanted but not invoked: &apos;;
        ///
        ///    /*
        ///     *	replicating the apex mocks tests with the new syntax
        ///     */
        ///    @IsTest
        ///    private static void whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts()
        ///    {
        ///        // Given
        ///        fflib_ApexMocks moc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrderTest_Formatted {
            get {
                return ResourceManager.GetString("fflib_AnyOrderTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2014-2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// * @group Core
        /// */
        ///public with sharing class fflib_ApexMocks implements System.StubProvider
        ///{
        ///	public static final Integer NEVER = 0;
        ///
        ///	private final fflib_MethodCountRecorder methodCountRecorder;
        ///	private final fflib_MethodReturnValueRecorder methodReturnValueRecorder;
        ///
        ///	private fflib_MethodVerifier methodVerifier;
        ///	private fflib_VerificationMode verificationMode;
        ///	private fflib_Answer myAnswer;
        ///
        ///	public Boolean Verifying { [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocks {
            get {
                return ResourceManager.GetString("fflib_ApexMocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     Copyright (c) 2014-2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     * @group Core
        ///     */
        ///    [WithSharing]
        ///    public class fflib_ApexMocks : System.StubProvider
        ///    {
        ///        public static readonly int NEVER = 0;
        ///
        ///        private readonly fflib_MethodCountRecorder methodCountRecorder;
        ///
        ///        private reado [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocks_CSharp {
            get {
                return ResourceManager.GetString("fflib_ApexMocks_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2014-2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// * @group Core
        /// */
        ///public with sharing class fflib_ApexMocks implements System.StubProvider
        ///{
        ///    public static final Integer NEVER = 0;
        ///
        ///    private final fflib_MethodCountRecorder methodCountRecorder;
        ///
        ///    private final fflib_MethodReturnValueRecorder methodReturnValueRecorder;
        ///
        ///    private fflib_MethodVerifier methodVerifier;
        ///
        ///    private fflib_VerificationMode verificationMode;
        ///
        ///    private fflib_Answer  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocks_Formatted {
            get {
                return ResourceManager.GetString("fflib_ApexMocks_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///@IsTest
        ///public class fflib_ApexMocksConfig
        ///{
        ///	/**
        ///	 * When false, stubbed behaviour and invocation counts are shared among all test spies.
        ///	 * - See fflib_ApexMocksTest.thatMultipleInstancesCanBeMockedDependently
        ///	 * - This is the default for backwards compatibility.
        ///	 * When true, each test spy instance has its own stubbed behaviour and invocations.
        ///	 * - See fflib_ApexMocksTest.thatMultipleInstancesCanBeMockedIndependently
        ///	 */
        ///	p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksConfig {
            get {
                return ResourceManager.GetString("fflib_ApexMocksConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     * Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    [TestFixture]
        ///    public class fflib_ApexMocksConfig
        ///    {
        ///        /**
        ///         * When false, stubbed behaviour and invocation counts are shared among all test spies.
        ///         * - See fflib_ApexMocksTest.thatMultipleInstancesC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksConfig_CSharp {
            get {
                return ResourceManager.GetString("fflib_ApexMocksConfig_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///@IsTest
        ///public class fflib_ApexMocksConfig
        ///{
        ///    /**
        ///     * When false, stubbed behaviour and invocation counts are shared among all test spies.
        ///     * - See fflib_ApexMocksTest.thatMultipleInstancesCanBeMockedDependently
        ///     * - This is the default for backwards compatibility.
        ///     * When true, each test spy instance has its own stubbed behaviour and invocations.
        ///     * - See fflib_ApexMocksTest.thatMultipleInstancesCan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksConfig_Formatted {
            get {
                return ResourceManager.GetString("fflib_ApexMocksConfig_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Copyright (c) 2014-2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///@isTest
        ///private class fflib_ApexMocksTest
        ///{
        ///	private static final fflib_ApexMocks MY_MOCKS = new fflib_ApexMocks();
        ///	private static final fflib_MyList MY_MOCK_LIST = (fflib_MyList)MY_MOCKS.mock(fflib_MyList.class);
        ///
        ///	@isTest
        ///	static void whenStubMultipleCallsWithMatchersShouldReturnExpectedValues()
        ///	{
        ///		// Given
        ///		fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///		fflib_MyList mockList = (fflib_MyList)mocks.mock(fflib_MyList.clas [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksTest {
            get {
                return ResourceManager.GetString("fflib_ApexMocksTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     * Copyright (c) 2014-2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    [TestFixture]
        ///    private class fflib_ApexMocksTest
        ///    {
        ///        private static readonly fflib_ApexMocks MY_MOCKS = new fflib_ApexMocks();
        ///
        ///        private static readonly fflib_MyList MY_MOCK_LIST = (fflib_MyList)MY_MOC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksTest_CSharp {
            get {
                return ResourceManager.GetString("fflib_ApexMocksTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Copyright (c) 2014-2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///@IsTest
        ///private class fflib_ApexMocksTest
        ///{
        ///    private static final fflib_ApexMocks MY_MOCKS = new fflib_ApexMocks();
        ///
        ///    private static final fflib_MyList MY_MOCK_LIST = (fflib_MyList)MY_MOCKS.mock(fflib_MyList.class);
        ///
        ///    @IsTest
        ///    static void whenStubMultipleCallsWithMatchersShouldReturnExpectedValues()
        ///    {
        ///        // Given
        ///        fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///        fflib_MyList mock [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksTest_Formatted {
            get {
                return ResourceManager.GetString("fflib_ApexMocksTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following disclaimer in t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksUtils {
            get {
                return ResourceManager.GetString("fflib_ApexMocksUtils", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /**
        ///     * Copyright (c) 2014, FinancialForce.com, inc
        ///     * All rights reserved.
        ///     *
        ///     * Redistribution and use in source and binary forms, with or without modification,
        ///     * are permitted provided that the following conditions are met:
        ///     *
        ///     * - Redistributions of source code must retain the above copyright notice,
        ///     *      t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksUtils_CSharp {
            get {
                return ResourceManager.GetString("fflib_ApexMocksUtils_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following discl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksUtils_Formatted {
            get {
                return ResourceManager.GetString("fflib_ApexMocksUtils_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following disclaimer in t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksUtilsTest {
            get {
                return ResourceManager.GetString("fflib_ApexMocksUtilsTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /**
        ///     * Copyright (c) 2014, FinancialForce.com, inc
        ///     * All rights reserved.
        ///     *
        ///     * Redistribution and use in source and binary forms, with or without modification,
        ///     * are permitted provided that the following conditions are met:
        ///     *
        ///     * - Redistributions of source code must retain the above [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksUtilsTest_CSharp {
            get {
                return ResourceManager.GetString("fflib_ApexMocksUtilsTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following discl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ApexMocksUtilsTest_Formatted {
            get {
                return ResourceManager.GetString("fflib_ApexMocksUtilsTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Copyright (c) 2016, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following disclaimer in th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ArgumentCaptor {
            get {
                return ResourceManager.GetString("fflib_ArgumentCaptor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     * Copyright (c) 2016, FinancialForce.com, inc
        ///     * All rights reserved.
        ///     *
        ///     * Redistribution and use in source and binary forms, with or without modification,
        ///     * are permitted provided that the following conditions are met:
        ///     *
        ///     * - Redistributions of source code must retain the above copyright notice,
        ///     *      th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ArgumentCaptor_CSharp {
            get {
                return ResourceManager.GetString("fflib_ArgumentCaptor_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Copyright (c) 2016, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following discla [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ArgumentCaptor_Formatted {
            get {
                return ResourceManager.GetString("fflib_ArgumentCaptor_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Copyright (c) 2016-2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// * @nodoc
        /// */
        ///@isTest
        ///private class fflib_ArgumentCaptorTest
        ///{
        ///	@isTest
        ///	static void thatArgumentValueIsCaptured()
        ///	{
        ///		// Given
        ///		fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///		fflib_MyList mockList = (fflib_MyList)mocks.mock(fflib_MyList.class);
        ///
        ///		// When
        ///		mockList.add(&apos;Fred&apos;);
        ///
        ///		// Then
        ///		fflib_ArgumentCaptor argument = fflib_ArgumentCaptor.forClass(String.class);
        ///		((fflib_MyList.IList) mocks.verify(mockList)).add( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ArgumentCaptorTest {
            get {
                return ResourceManager.GetString("fflib_ArgumentCaptorTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     * Copyright (c) 2016-2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     * @nodoc
        ///     */
        ///    [TestFixture]
        ///    private class fflib_ArgumentCaptorTest
        ///    {
        ///        [Test]
        ///        static void thatArgumentValueIsCaptured()
        ///        {
        ///            // Given
        ///            fflib_ApexMocks [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ArgumentCaptorTest_CSharp {
            get {
                return ResourceManager.GetString("fflib_ArgumentCaptorTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Copyright (c) 2016-2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// * @nodoc
        /// */
        ///@IsTest
        ///private class fflib_ArgumentCaptorTest
        ///{
        ///    @IsTest
        ///    static void thatArgumentValueIsCaptured()
        ///    {
        ///        // Given
        ///        fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///        fflib_MyList mockList = (fflib_MyList)mocks.mock(fflib_MyList.class);
        ///
        ///        // When
        ///        mockList.add(&apos;Fred&apos;);
        ///
        ///        // Then
        ///        fflib_ArgumentCaptor argument = fflib_ArgumentCaptor.forCl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_ArgumentCaptorTest_Formatted {
            get {
                return ResourceManager.GetString("fflib_ArgumentCaptorTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following disclaimer in t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IDGenerator {
            get {
                return ResourceManager.GetString("fflib_IDGenerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /**
        ///     * Copyright (c) 2014, FinancialForce.com, inc
        ///     * All rights reserved.
        ///     *
        ///     * Redistribution and use in source and binary forms, with or without modification,
        ///     * are permitted provided that the following conditions are met:
        ///     *
        ///     * - Redistributions of source code must retain the above copyright notice,
        ///     *      t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IDGenerator_CSharp {
            get {
                return ResourceManager.GetString("fflib_IDGenerator_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following discl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IDGenerator_Formatted {
            get {
                return ResourceManager.GetString("fflib_IDGenerator_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following disclaimer in t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IDGeneratorTest {
            get {
                return ResourceManager.GetString("fflib_IDGeneratorTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /**
        ///     * Copyright (c) 2014, FinancialForce.com, inc
        ///     * All rights reserved.
        ///     *
        ///     * Redistribution and use in source and binary forms, with or without modification,
        ///     * are permitted provided that the following conditions are met:
        ///     *
        ///     * - Redistributions of source code must retain the above [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IDGeneratorTest_CSharp {
            get {
                return ResourceManager.GetString("fflib_IDGeneratorTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following discl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IDGeneratorTest_Formatted {
            get {
                return ResourceManager.GetString("fflib_IDGeneratorTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following disclaimer in t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IMatcher {
            get {
                return ResourceManager.GetString("fflib_IMatcher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /**
        ///     * Copyright (c) 2014, FinancialForce.com, inc
        ///     * All rights reserved.
        ///     *
        ///     * Redistribution and use in source and binary forms, with or without modification,
        ///     * are permitted provided that the following conditions are met:
        ///     *
        ///     * - Redistributions of source code must retain the above copyright notice,
        ///     *      t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IMatcher_CSharp {
            get {
                return ResourceManager.GetString("fflib_IMatcher_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Copyright (c) 2014, FinancialForce.com, inc
        /// * All rights reserved.
        /// *
        /// * Redistribution and use in source and binary forms, with or without modification,
        /// * are permitted provided that the following conditions are met:
        /// *
        /// * - Redistributions of source code must retain the above copyright notice,
        /// *      this list of conditions and the following disclaimer.
        /// * - Redistributions in binary form must reproduce the above copyright notice,
        /// *      this list of conditions and the following discl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_IMatcher_Formatted {
            get {
                return ResourceManager.GetString("fflib_IMatcher_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ForIfWhile
        ///{
        ///    public void MethodIfClean()
        ///    {
        ///        String medal_color ;
        ///        Integer place ;
        ///        if (place == 1)
        ///        {
        ///            medal_color = &apos;gold&apos; ;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            medal_color = &apos;silver&apos; ;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            medal_color = &apos;bronze&apos; ;
        ///        }
        ///        else
        ///        {
        ///            medal_color = null ;
        ///        }
        ///    }
        ///    public void MethodForTraditional()
        ///    {
        ///        for (I [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile {
            get {
                return ResourceManager.GetString("ForIfWhile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ForIfWhile
        ///    {
        ///        public void MethodIfClean(int place)
        ///        {
        ///            string modelColor;
        ///            if (place == 1)
        ///            {
        ///                modelColor = &quot;Gold&quot;;
        ///            }
        ///            else if (place == 2)
        ///            {
        ///                modelColor = &quot;Silver&quot;;
        ///            }
        ///            else if (place == 3)        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile_CSharp {
            get {
                return ResourceManager.GetString("ForIfWhile_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ForIfWhile
        ///{
        ///    public void MethodIfClean(Integer place)
        ///    {
        ///        String modelColor;
        ///        if (place == 1)
        ///        {
        ///            modelColor = &apos;Gold&apos;;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            modelColor = &apos;Silver&apos;;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            modelColor = &apos;Bronze&apos;;
        ///        }
        ///        else
        ///        {
        ///            modelColor = null;
        ///        }
        ///    }
        ///
        ///    public void MethodForTraditional()
        ///    {
        ///        for (Integer i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile_Formatted {
            get {
                return ResourceManager.GetString("ForIfWhile_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ForIfWhile {
        ///    public void MethodIfClean(Integer place) {
        ///        String modelColor;
        ///
        ///        if (place == 1) {
        ///            modelColor = &apos;Gold&apos; ;
        ///        } else if (place == 2) {
        ///            modelColor = &apos;Silver&apos; ;
        ///        } else if (place == 3) {
        ///            modelColor = &apos;Bronze&apos; ;
        ///        } else {
        ///            modelColor = null ;
        ///        }
        ///    }
        ///    public void MethodForTraditional() {
        ///        for (Integer i = 0; i &lt; 10; i++) {
        ///            System.Debug (i + 1) ;
        ///        }
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile_Original {
            get {
                return ResourceManager.GetString("ForIfWhile_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ForIfWhile
        ///{
        ///    public void MethodIfClean(Integer place)
        ///    {
        ///        String modelColor;
        ///
        ///        if (place == 1)
        ///        {
        ///            modelColor = &apos;Gold&apos; ;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            modelColor = &apos;Silver&apos; ;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            modelColor = &apos;Bronze&apos; ;
        ///        }
        ///        else
        ///        {
        ///            modelColor = null ;
        ///        }
        ///    }
        ///    public void MethodForTraditional()
        ///    {
        ///        for (Integ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile2 {
            get {
                return ResourceManager.GetString("ForIfWhile2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ForIfWhile
        ///{
        ///    public void MethodIfClean(Integer place)
        ///    {
        ///        String modelColor;
        ///
        ///        if (place == 1)
        ///        {
        ///            modelColor = &apos;Gold&apos; ;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            modelColor = &apos;Silver&apos; ;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            modelColor = &apos;Bronze&apos; ;
        ///        }
        ///        else
        ///        {
        ///            modelColor = null ;
        ///        }
        ///    }
        ///    public void MethodForTraditional()
        ///    {
        ///        for (Integ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile3 {
            get {
                return ResourceManager.GetString("ForIfWhile3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class ForIfWhile
        ///    {
        ///        public void MethodIfClean(int place)
        ///        {
        ///            // string model color
        ///            string modelColor;
        ///
        ///            // if place equals 1
        ///            if (place == 1)
        ///            {
        ///                modelColor = &quot;Gold&quot;;
        ///            }
        ///            else if (place == 2)
        ///            {
        ///                m [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile4_CSharp {
            get {
                return ResourceManager.GetString("ForIfWhile4_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ForIfWhile
        ///{
        ///    public void MethodIfClean(Integer place)
        ///    {
        ///        // string model color
        ///        String modelColor;
        ///
        ///        // if place equals 1
        ///        if (place == 1)
        ///        {
        ///            modelColor = &apos;Gold&apos;;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            modelColor = &apos;Silver&apos;;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            modelColor = &apos;Bronze&apos;;
        ///        }
        ///        else
        ///        {
        ///            modelColor = null;
        ///        } // else
        ///    }
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile4_Formatted {
            get {
                return ResourceManager.GetString("ForIfWhile4_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ForIfWhile
        ///{
        ///    public void MethodIfClean(Integer place)
        ///    {
        ///        // string model color
        ///        String modelColor;
        ///
        ///        // if place equals 1
        ///        if (place == 1)
        ///        {
        ///            modelColor = &apos;Gold&apos; ;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            modelColor = &apos;Silver&apos; ;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            modelColor = &apos;Bronze&apos; ;
        ///        }
        ///        else
        ///        {
        ///            modelColor = null ;
        ///        } // else
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile4_Original {
            get {
                return ResourceManager.GetString("ForIfWhile4_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///* This  is a comment line one
        ///* This is a comment // line two
        ///*/
        ///public with sharing class FormatDemo
        ///{
        ///    public Integer
        ///        dateOfBirth
        ///            { get; set; }
        ///    public void ForLoopTest() {
        ///        for (Integer i = 0; i &lt; 10; i++) {
        ///            List&lt;Contact&gt; contacts =
        ///            [
        ///                    SELECT Name, Email // This is a middle line comment
        ///                    From Contact
        ///                    Where Name = &apos;Jay&apos;
        ///            ];
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string FormatDemo {
            get {
                return ResourceManager.GetString("FormatDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///* This  is a comment line one
        ///* This is a comment // line two
        ///*/
        ///public with sharing class FormatDemo
        ///{
        ///    public Integer dateOfBirth { get; set; }
        ///
        ///    public void ForLoopTest()
        ///    {
        ///        for (Integer i = 0; i &lt; 10; i++)
        ///        {
        ///            List&lt;Contact&gt; contacts = [SELECT Name, Email From Contact
        ///                    Where Name = &apos;Jay&apos;];
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string FormatDemo_Formatted {
            get {
                return ResourceManager.GetString("FormatDemo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class GetSetDemo {
        ///    public double MyReadWritePropPublic { get; set; }
        ///    private Integer propPrvt;
        ///    public Integer prop {
        ///        get {
        ///            return propPrvt;
        ///        }
        ///        set {
        ///            propPrvt = value;
        ///        }
        ///    }
        ///    public Integer MyReadOnlyProp {
        ///        get;
        ///    }
        ///
        ///    private static Integer myStaticPropPrvt;
        ///    public static Integer MyStaticProp {
        ///        get {
        ///            return myStaticPropPrvt;
        ///        }
        ///    }
        ///
        ///    Integer MyReadOnlyPropPrvt  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetSetDemo {
            get {
                return ResourceManager.GetString("GetSetDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class GetSetDemo
        ///    {
        ///        public double MyReadWritePropPublic { get; set; }
        ///
        ///        private int propPrvt;
        ///
        ///        public int prop
        ///        {
        ///            get
        ///            {
        ///                return propPrvt;
        ///            }
        ///            set
        ///            {
        ///                propPrvt = value;
        ///            }
        ///        }
        ///
        ///        public in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetSetDemo_CSharp {
            get {
                return ResourceManager.GetString("GetSetDemo_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class GetSetDemo
        ///{
        ///    public Double MyReadWritePropPublic { get; set; }
        ///
        ///    private Integer propPrvt;
        ///
        ///    public Integer prop
        ///    {
        ///        get
        ///        {
        ///            return propPrvt;
        ///        }
        ///        set
        ///        {
        ///            propPrvt = value;
        ///        }
        ///    }
        ///
        ///    public Integer MyReadOnlyProp { get; }
        ///
        ///    private static Integer myStaticPropPrvt;
        ///
        ///    public static Integer MyStaticProp
        ///    {
        ///        get
        ///        {
        ///            return myStaticPropPrvt;
        ///        }
        ///    }
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetSetDemo_Formatted {
            get {
                return ResourceManager.GetString("GetSetDemo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class GetSetDemo {
        ///    public double MyReadWritePropPublic { get; set; }
        ///    private Integer propPrvt;
        ///    public Integer prop {
        ///        get {
        ///            return propPrvt;
        ///        }
        ///        set {
        ///            propPrvt = value;
        ///        }
        ///    }
        ///    public Integer MyReadOnlyProp {
        ///        get;
        ///    }
        ///
        ///    private static Integer myStaticPropPrvt;
        ///    public static Integer MyStaticProp {
        ///        get {
        ///            return myStaticPropPrvt;
        ///        }
        ///    }
        ///
        ///    Integer MyReadOnlyPropPrvt  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetSetDemo_Original {
            get {
                return ResourceManager.GetString("GetSetDemo_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public interface IClassInterface extends IClassInterfaceExt {
        ///    string GetName();
        ///}
        ///.
        /// </summary>
        internal static string IClassInterface {
            get {
                return ResourceManager.GetString("IClassInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public interface IClassInterface : IClassInterfaceExt
        ///    {
        ///        string GetName();
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string IClassInterface_CSharp {
            get {
                return ResourceManager.GetString("IClassInterface_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public interface IClassInterface extends IClassInterfaceExt
        ///{
        ///    String GetName();
        ///}
        ///.
        /// </summary>
        internal static string IClassInterface_Formatted {
            get {
                return ResourceManager.GetString("IClassInterface_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public interface IClassInterface extends IClassInterfaceExt {
        ///    string GetName();
        ///}
        ///.
        /// </summary>
        internal static string IClassInterface_Original {
            get {
                return ResourceManager.GetString("IClassInterface_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public interface IClassInterfaceExt {
        ///    Id GetId();
        ///}.
        /// </summary>
        internal static string IClassInterfaceExt {
            get {
                return ResourceManager.GetString("IClassInterfaceExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public interface IClassInterfaceExt
        ///    {
        ///        //    ID GetId();
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string IClassInterfaceExt_CSharp {
            get {
                return ResourceManager.GetString("IClassInterfaceExt_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public interface IClassInterfaceExt
        ///{
        ///	//    ID GetId();
        ///}.
        /// </summary>
        internal static string IClassInterfaceExt_Formatted {
            get {
                return ResourceManager.GetString("IClassInterfaceExt_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public interface IClassInterfaceExt {
        /////    ID GetId();
        ///}.
        /// </summary>
        internal static string IClassInterfaceExt_Original {
            get {
                return ResourceManager.GetString("IClassInterfaceExt_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class JsonExample
        ///{
        ///    public void JsonExampleMethod()
        ///    {
        ///        String name = &apos;Jay&apos;;
        ///
        ///        String jsonString = JSON.Serialize(name);
        ///
        ///        String newName = (String)JSON.Deserialize(jsonString, String.class);
        ///    }
        ///}.
        /// </summary>
        internal static string JsonExample {
            get {
                return ResourceManager.GetString("JsonExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class JsonExample
        ///    {
        ///        public void JsonExampleMethod()
        ///        {
        ///            Contact contact = new Contact();
        ///            contact.LastName = &quot;Jay&quot;;
        ///            contact.Email = &quot;jay@jay.com&quot;;
        ///            string jsonString = JSON.Serialize(contact);
        ///            Contact newContact = (Contact)JSON.Deserialize(jsonString, typeof(Conta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JsonExample_CSharp {
            get {
                return ResourceManager.GetString("JsonExample_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class JsonExample
        ///{
        ///    public void JsonExampleMethod()
        ///    {
        ///        Contact contact = new Contact();
        ///        contact.LastName = &apos;Jay&apos;;
        ///        contact.Email = &apos;jay@jay.com&apos;;
        ///        String jsonString = JSON.Serialize(contact);
        ///        Contact newContact = (Contact)JSON.Deserialize(jsonString, Contact.class);
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string JsonExample_Formatted {
            get {
                return ResourceManager.GetString("JsonExample_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class JsonExample
        ///{
        ///    public void JsonExampleMethod()
        ///    {
        ///        Contact contact = new Contact();
        ///        contact.LastName = &apos;Jay&apos;;
        ///        contact.Email = &apos;jay@jay.com&apos;;
        ///
        ///        String jsonString = JSON.Serialize(contact);
        ///        Contact newContact = (Contact)JSON.Deserialize(jsonString, Contact.class);
        ///    }
        ///}.
        /// </summary>
        internal static string JsonExample_Original {
            get {
                return ResourceManager.GetString("JsonExample_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ListAndArrayDemo {
        ///    public List&lt;String&gt; StringList = new List&lt;String&gt; { &apos;one&apos;, &apos;two&apos; };
        ///    public Integer[] IntegerArray = new Integer[]{1, 2, 3};
        ///
        ///    public void Method() {
        ///        List&lt;String&gt; StringListLocal = new List&lt;String&gt; { &apos;one&apos;, &apos;two&apos; };
        ///        Integer[] IntegerArrayLocal = new Integer[]{1, 2, 3};
        ///    }
        ///}.
        /// </summary>
        internal static string ListAndArrayDemo {
            get {
                return ResourceManager.GetString("ListAndArrayDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global abstract class MethodAndConstructor
        ///{
        ///    global abstract void MethodThree();
        ///
        ///    MethodAndConstructor()
        ///    {
        ///    }
        ///    public MethodAndConstructor(String demo)
        ///    {
        ///    }
        ///    public virtual void VirtualMethod()
        ///    {
        ///    }
        ///    @future
        ///    public static void FutureMethod()
        ///    {
        ///    }
        ///    @future(callOut=true)
        ///    public static void FutureMethodWithCallOut()
        ///    {
        ///    }
        ///    void StringVoid()
        ///    {
        ///    }
        ///
        ///    private void StringPrivateVoid()
        ///    {
        ///
        ///    }
        ///    public void [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MethodAndConstructor {
            get {
                return ResourceManager.GetString("MethodAndConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public abstract class MethodAndConstructor
        ///    {
        ///        public abstract void MethodThree();
        ///
        ///        MethodAndConstructor()
        ///        {
        ///        }
        ///
        ///        public MethodAndConstructor(string demo)
        ///        {
        ///        }
        ///
        ///        public virtual void VirtualMethod()
        ///        {
        ///        }
        ///
        ///        [Future]
        ///        public static void FutureMethod( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MethodAndConstructor_CSharp {
            get {
                return ResourceManager.GetString("MethodAndConstructor_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public abstract class MethodAndConstructor
        ///{
        ///    public abstract void MethodThree();
        ///
        ///    MethodAndConstructor()
        ///    {
        ///    }
        ///
        ///    public MethodAndConstructor(String demo)
        ///    {
        ///    }
        ///
        ///    public virtual void VirtualMethod()
        ///    {
        ///    }
        ///
        ///    @Future
        ///    public static void FutureMethod()
        ///    {
        ///    }
        ///
        ///    @Future(callOut=true)
        ///    public static void FutureMethodWithCallOut()
        ///    {
        ///    }
        ///
        ///    void StringVoid()
        ///    {
        ///    }
        ///
        ///    private void StringPrivateVoid()
        ///    {
        ///    }
        ///
        ///    p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MethodAndConstructor_Formatted {
            get {
                return ResourceManager.GetString("MethodAndConstructor_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public abstract class MethodAndConstructor
        ///{
        ///    public abstract void MethodThree();
        ///
        ///    MethodAndConstructor()
        ///    {
        ///    }
        ///    public MethodAndConstructor(string demo)
        ///    {
        ///    }
        ///    public virtual void VirtualMethod()
        ///    {
        ///    }
        ///    @future
        ///    public static void FutureMethod()
        ///    {
        ///    }
        ///
        ///    @future(callOut=true)
        ///    public static void FutureMethodWithCallOut()
        ///    {
        ///    }
        ///    void StringVoid()
        ///    {
        ///    }
        ///
        ///    private void StringPrivateVoid()
        ///    {
        ///
        ///    }
        ///    public vo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MethodAndConstructor_Original {
            get {
                return ResourceManager.GetString("MethodAndConstructor_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [WithSharing]
        ///    public class MethodComplex
        ///    {
        ///        public static void MethodOne()
        ///        {
        ///            foreach (Account a in Soql.query&lt;Account&gt;(@&quot;SELECT Id FROM Account&quot;))
        ///            {
        ///                System.Debug(a.Id);
        ///            }
        ///
        ///            for (int i = 0; i&lt;10; i++)
        ///            {
        ///            }
        ///        }
        ///
        ///        public  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MethodComplex_CSharp {
            get {
                return ResourceManager.GetString("MethodComplex_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class MethodComplex
        ///{
        ///    public static void MethodOne()
        ///    {
        ///        for (Account a : [SELECT Id FROM Account])
        ///        {
        ///            System.Debug(a.Id);
        ///        }
        ///
        ///        for (Integer i = 0; i&lt;10; i++)
        ///        {
        ///        }
        ///    }
        ///
        ///    public Database.QueryLocator QueryLocator(Database.BatchableContext bc)
        ///    {
        ///        return Database.GetQueryLocator([SELECT Id FROM Contact]);
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string MethodComplex_Formatted {
            get {
                return ResourceManager.GetString("MethodComplex_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class MethodComplex {
        ///    public static void MethodOne() {
        ///
        ///        for (Account a : [SELECT Id FROM Account]) {
        ///            System.Debug(a.Id);
        ///        }
        ///
        ///        for (Integer i=0;i&lt;10;i++) {
        ///
        ///        }
        ///    }
        ///
        ///    public Database.QueryLocator QueryLocator(Database.BatchableContext bc)
        ///    {
        ///         return Database.GetQueryLocator([SELECT Id FROM Contact]);
        ///    }
        ///}.
        /// </summary>
        internal static string MethodComplex_Original {
            get {
                return ResourceManager.GetString("MethodComplex_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PrimitiveTypes
        ///{
        ///    public Blob MyBlob = Blob.ValueOf(&apos;Jay&apos;);
        ///    public Boolean IsWinner = true;
        ///    public Date MyDate = Date.Today();
        ///    public DateTime MyDateTime = DateTime.Now();
        ///    public Decimal MyDecimal = 12.4567;
        ///    public Double d=3.133433;
        ///    public Id MyId = &apos;006E0000004TquXIAS&apos;;
        ///    public Integer MyInteger = 1;
        ///    public Long MyLong = 23432424242L;
        ///    public Time MyTime = Time.NewInstance(1, 2, 3, 4);
        ///    public String MyString = &apos;Jay&apos;;
        ///
        ///    public void Demo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrimitiveTypes {
            get {
                return ResourceManager.GetString("PrimitiveTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class PrimitiveTypes
        ///    {
        ///        public Blob MyBlob = Blob.ValueOf(&quot;Jay&quot;);
        ///
        ///        public bool IsWinner = true;
        ///
        ///        public Date MyDate = Date.Today();
        ///
        ///        public Datetime MyDateTime = Datetime.Now();
        ///
        ///        // public Decimal MyDecimal = 12.4567;
        ///        public double d = 3.133433;
        ///
        ///        public ID MyId = &quot;006E0000004 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrimitiveTypes_CSharp {
            get {
                return ResourceManager.GetString("PrimitiveTypes_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PrimitiveTypes
        ///{
        ///    public Blob MyBlob = Blob.ValueOf(&apos;Jay&apos;);
        ///
        ///    public Boolean IsWinner = true;
        ///
        ///    public Date MyDate = Date.Today();
        ///
        ///    public Datetime MyDateTime = Datetime.Now();
        ///
        ///    // public Decimal MyDecimal = 12.4567;
        ///    public Double d = 3.133433;
        ///
        ///    public ID MyId = &apos;006E0000004TquXIAS&apos;;
        ///
        ///    public Integer MyInteger = 1;
        ///
        ///    public Long MyLong = 23432424242L;
        ///
        ///    public Time MyTime = Time.NewInstance(1, 2, 3, 4);
        ///
        ///    public String MyString = &apos;Jay&apos;;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrimitiveTypes_Formatted {
            get {
                return ResourceManager.GetString("PrimitiveTypes_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PrimitiveTypes
        ///{
        ///    public Blob MyBlob = Blob.ValueOf(&apos;Jay&apos;);
        ///    public Boolean IsWinner = true;
        ///
        ///    public Date MyDate = Date.Today();
        ///    public Datetime MyDateTime = Datetime.Now();
        ///
        ///    // public Decimal MyDecimal = 12.4567;
        ///    public Double d=3.133433;
        ///    public Id MyId = &apos;006E0000004TquXIAS&apos;;
        ///    public Integer MyInteger = 1;
        ///    public Long MyLong = 23432424242L;
        ///    public Time MyTime = Time.NewInstance(1, 2, 3, 4);
        ///    public String MyString = &apos;Jay&apos;;
        ///
        ///    public st [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrimitiveTypes_Original {
            get {
                return ResourceManager.GetString("PrimitiveTypes_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // ClassDeclaration
        ///public with sharing class PropertyAndField
        ///{
        ///    // PropertyDeclarationSyntax
        ///    public DateTime DateTimeGetSet { get; set; }
        ///    // PropertyDeclarationSyntax
        ///    public List&lt;DateTime&gt; DateTimeGetSetGeneric { get; set; }
        ///    // PropertyDeclarationSyntax
        ///    public DateTime[] DateTimeGetSetArray { get; set; }
        ///    // FieldDeclarationSyntax
        ///    public DateTime DateTimeEmpty;
        ///    // FieldDeclarationSyntax
        ///    public DateTime DateTimeInitilized = DateTime.now();
        ///    // FieldDeclarationSyntax [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField {
            get {
                return ResourceManager.GetString("PropertyAndField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class PropertyAndField
        ///    {
        ///        public Datetime DateTimeGetSet { get; set; }
        ///
        ///        public List&lt;Datetime&gt; DateTimeGetSetGeneric { get; set; }
        ///
        ///        public Datetime[] DateTimeGetSetArray { get; set; }
        ///
        ///        public Datetime DateTimeEmpty;
        ///
        ///        public Datetime DateTimeInitialized = Datetime.Now();
        ///
        ///        public List&lt;Da [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField_CSharp {
            get {
                return ResourceManager.GetString("PropertyAndField_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PropertyAndField
        ///{
        ///    public Datetime DateTimeGetSet { get; set; }
        ///
        ///    public List&lt;Datetime&gt; DateTimeGetSetGeneric { get; set; }
        ///
        ///    public Datetime[] DateTimeGetSetArray { get; set; }
        ///
        ///    public Datetime DateTimeEmpty;
        ///
        ///    public Datetime DateTimeInitialized = Datetime.Now();
        ///
        ///    public List&lt;Datetime&gt; DateTimeList = new List&lt;Datetime&gt;();
        ///
        ///    public Datetime[] DateTimeArray = new Datetime[5];
        ///
        ///    public String Name = &apos;jay&apos;;
        ///
        ///    public final String nameFinal = &apos;jay&apos;;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField_Formatted {
            get {
                return ResourceManager.GetString("PropertyAndField_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PropertyAndField
        ///{
        ///    public DateTime DateTimeGetSet { get; set; }
        ///    public List&lt;DateTime&gt; DateTimeGetSetGeneric { get; set; }
        ///    public Datetime[] DateTimeGetSetArray { get; set; }
        ///    public Datetime DateTimeEmpty;
        ///    public Datetime DateTimeInitialized = Datetime.Now();
        ///    public List&lt;DateTime&gt; DateTimeList = new List&lt;DateTime&gt;();
        ///    public DateTime[] DateTimeArray = new DateTime[5];
        ///    public string Name = &apos;jay&apos;;
        ///    public final string nameFinal = &apos;jay&apos;;
        ///    public stati [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField_Original {
            get {
                return ResourceManager.GetString("PropertyAndField_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PropertyAndField
        ///{
        ///    transient Integer TransientInteger;
        ///    public DateTime DateTimeGetSet { get; set; }
        ///    public List&lt;DateTime&gt; DateTimeGetSetGeneric { get; set; }
        ///    public DateTime[] DateTimeGetSetArray { get; set; }
        ///    public DateTime DateTimeEmpty;
        ///    public DateTime DateTimeInitialized = DateTime.now();
        ///    public List&lt;DateTime&gt; DateTimeList = new List&lt;DateTime&gt;();
        ///    public DateTime[] DateTimeArray = new DateTime[5];
        ///    public String Name = &apos;jay&apos;;
        ///    public final St [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField2 {
            get {
                return ResourceManager.GetString("PropertyAndField2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PropertyAndField
        ///{
        ///    transient Integer TransientInteger;
        ///    public DateTime DateTimeGetSet { get; set; }
        ///    public List&lt;DateTime&gt; DateTimeGetSetGeneric { get; set; }
        ///    public DateTime[] DateTimeGetSetArray { get; set; }
        ///    public DateTime DateTimeEmpty;
        ///    public DateTime DateTimeInitialized = DateTime.now();
        ///    public List&lt;DateTime&gt; DateTimeList = new List&lt;DateTime&gt;();
        ///    public DateTime[] DateTimeArray = new DateTime[5];
        ///    public String Name = &apos;jay&apos;;
        ///    public final St [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField3 {
            get {
                return ResourceManager.GetString("PropertyAndField3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class RunAll
        ///{
        ///    public RunAll()
        ///    {
        ///        //ClassAbstract classAbstract = new ClassAbstract();
        ///        //ClassEnum classEnum = ClassEnum.America;
        ///        ClassException classException = new ClassException();
        ///        ClassGlobal classGlobal = new ClassGlobal();
        ///        ClassInterface classInterface = new ClassInterface();
        ///
        ///        ClassInternal classInternal = new ClassInternal();
        ///        ClassInternal.InternalClassOne internalClassOne = new ClassInternal.InternalClassOne();
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RunAll {
            get {
                return ResourceManager.GetString("RunAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.ApexSharp.NUnit;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [TestFixture]
        ///    [WithSharing]
        ///    public class RunAll
        ///    {
        ///        [Test]
        ///        public static void TestClassess()
        ///        {
        ///            System.Debug(ClassEnum.America);
        ///            System.Debug(new ClassException());
        ///            System.Debug(new ClassGlobal());
        ///            ClassInitialization newClassIniti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RunAll_CSharp {
            get {
                return ResourceManager.GetString("RunAll_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///public with sharing class RunAll
        ///{
        ///    @IsTest
        ///    public static void TestClassess()
        ///    {
        ///        System.Debug(ClassEnum.America);
        ///        System.Debug(new ClassException());
        ///        System.Debug(new ClassGlobal());
        ///        ClassInitialization newClassInitialization = new ClassInitialization();
        ///        System.Debug(ClassInitialization.colorMap);
        ///        System.Debug(newClassInitialization.contactList);
        ///        ClassInterface classInterface = new ClassInterface();
        ///        System.Debug(c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RunAll_Formatted {
            get {
                return ResourceManager.GetString("RunAll_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest
        ///public with sharing class RunAll
        ///{
        ///    @isTest
        ///    public static void TestClassess() {
        ///        System.Debug(ClassEnum.America);
        ///        System.Debug(new ClassException());
        ///        System.Debug(new ClassGlobal());
        ///
        ///        ClassInitialization newClassInitialization = new ClassInitialization();
        ///        System.Debug(ClassInitialization.colorMap);
        ///        System.Debug(newClassInitialization.contactList);
        ///
        ///        ClassInterface classInterface = new ClassInterface();
        ///        System.Debug(cl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RunAll_Original {
            get {
                return ResourceManager.GetString("RunAll_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class SoqlDemo {
        ///    /**
        ///     * A simple CRUD Example
        ///     */
        ///    public static void CrudExample()
        ///    {
        ///        Contact contactNew = new Contact(LastName = &apos;Jay&apos;, EMail = &apos;abc@abc.com&apos;);
        ///        insert contactNew;
        ///
        ///        System.debug(contactNew.Id);
        ///
        ///        List&lt;Contact&gt; contacts = [SELECT Id, Email FROM Contact WHERE Id = :contactNew.Id];
        ///        for (Contact c : contacts)
        ///        {
        ///            System.debug(c.Email); c.Email = &apos;new@new.com&apos;;
        ///        }
        ///        update  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemo {
            get {
                return ResourceManager.GetString("SoqlDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class SoqlDemo
        ///    {
        ///        /**
        ///         * A simple CRUD Example
        ///         */
        ///        public static void CrudExample()
        ///        {
        ///            // Contact contactNew = new Contact(LastName = &apos;Jay&apos;, Email = &apos;abc@abc.com&apos;);
        ///            Contact contactNew = new Contact();
        ///            Soql.insert(contactNew);
        ///            System.Debug(contactNe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemo_CSharp {
            get {
                return ResourceManager.GetString("SoqlDemo_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class SoqlDemo
        ///{
        ///    /**
        ///     * A simple CRUD Example
        ///     */
        ///    public static void CrudExample()
        ///    {
        ///        // Contact contactNew = new Contact(LastName = &apos;Jay&apos;, Email = &apos;abc@abc.com&apos;);
        ///        Contact contactNew = new Contact();
        ///        insert contactNew;
        ///        System.Debug(contactNew.Id);
        ///        List&lt;Contact&gt; contacts = [SELECT Id, Email FROM Contact WHERE Id = :contactNew.Id];
        ///        for (Contact c : contacts)
        ///        {
        ///            System.Debug(c.Email);
        ///            c.Email [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemo_Formatted {
            get {
                return ResourceManager.GetString("SoqlDemo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class SoqlDemo {
        ////**
        /// * A simple CRUD Example
        /// */
        ///    public static void CrudExample() {
        ///        // Contact contactNew = new Contact(LastName = &apos;Jay&apos;, Email = &apos;abc@abc.com&apos;);
        ///        Contact contactNew = new Contact();
        ///        insert contactNew;
        ///
        ///        System.Debug(contactNew.Id);
        ///
        ///        List&lt;Contact&gt; contacts = [SELECT Id, Email FROM Contact WHERE Id = :contactNew.Id];
        ///        for (Contact c : contacts) {
        ///            System.Debug(c.Email);
        ///            c.Email = &apos;new@new.com&apos;;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemo_Original {
            get {
                return ResourceManager.GetString("SoqlDemo_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing abstract class SoqlDemo {
        ///
        ///    public List&lt;Contact&gt; contactList = [SELECT 1, Id, Email FROM Contact];
        ///
        ///    public SoqlDemo()
        ///    {
        ///        contactList = [SELECT 2, Id, Email FROM Contact];
        ///    }
        ///
        ///    public abstract void AbstractMethod();
        ///
        ///
        ///    public void CommentedQueryIsIgnored()
        ///    {
        ///    	// Contact contact = [SELECT Id, Email FROM Contact LIMIT 1];
        ///
        ///    	/* 
        ///        	List&lt;Contact&gt; contacts = [SELECT Id, Email FROM Contact WHERE Id = :contactNew.Id];
        ///    	*/
        ///    }        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemo2 {
            get {
                return ResourceManager.GetString("SoqlDemo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    [WithSharing]
        ///    public class SoqlDemo
        ///    {
        ///        /**
        ///         * A simple CRUD Example
        ///         */
        ///        public static void CrudExample()
        ///        {
        ///            Contact contactNew = new Contact { LastName = &quot;Jay&quot;, EMail = &quot;abc@abc.com&quot; };
        ///            Soql.insert(contactNew);
        ///            System.debug(contactNew.Id);
        ///            List&lt;Conta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemoCS {
            get {
                return ResourceManager.GetString("SoqlDemoCS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.ApexSharp.ApexAttributes;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    public class SwitchDemo
        ///    {
        ///        public static void Method()
        ///        {
        ///            int x = 123;
        ///            switch (x)
        ///            {
        ///            	case 5:
        ///            	case 6:
        ///            	case 7:
        ///            		System.debug(&apos;Cool!&apos;); // 1
        ///            		break;
        ///
        ///            	case string c:
        ///            		switch (c)
        ///            		{
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SwitchDemo_CSharp {
            get {
                return ResourceManager.GetString("SwitchDemo_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class SwitchDemo
        ///{
        ///    public static void Method()
        ///    {
        ///        Integer x = 123;
        ///        switch on x
        ///        {
        ///        	when 5, 6, 7
        ///        	{
        ///        		System.debug(&apos;Cool!&apos;); // 1
        ///        	}
        ///        	when String c
        ///        	{
        ///        		switch on c
        ///        		{
        ///        			// 2
        ///        			when &apos;foo&apos;
        ///        			{
        ///        				System.debug(&apos;bar&apos;); // 3
        ///        			}
        ///        			when else
        ///        			{
        ///        				System.debug(&apos;baz&apos;); // 4
        ///        			} // 5
        ///        		}
        ///        	} //  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SwitchDemo_Formatted {
            get {
                return ResourceManager.GetString("SwitchDemo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class SwitchDemo {
        ///    public static void Method() {
        ///        Integer x = 123;
        ///        switch on x {
        ///        	when 5, 6, 7 {
        ///        		System.debug(&apos;Cool!&apos;); // 1
        ///        	}
        ///        	when String c {
        ///        		switch on c {
        ///        			// 2
        ///        			when &apos;foo&apos; {
        ///        				System.debug(&apos;bar&apos;); // 3
        ///        			}
        ///        			when else {
        ///        				System.debug(&apos;baz&apos;); // 4
        ///        			} // 5
        ///        		}
        ///        	} // 6
        ///        	when else {
        ///        		return; // 7
        ///        	}
        ///        } [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SwitchDemo_Original {
            get {
                return ResourceManager.GetString("SwitchDemo_Original", resourceCulture);
            }
        }
    }
}
